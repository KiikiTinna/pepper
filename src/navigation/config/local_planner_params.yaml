move_base:
  
  base_local_planner: "dwa_local_planner/DWAPlannerROS"

  local_costmap:
    global_frame: odom
    robot_base_frame: /base_link
    update_frequency: 5.0  # Reduce CPU load
    publish_frequency: 2.0
    static_map: false
    rolling_window: true
    width: 4.0  
    height: 4.0
    resolution: 0.05
    transform_tolerance: 1.0
    robot_radius: 0.48
#    footprint: [[0.2425, 0.0], [-0.2125, 0.2125], [-0.2125, -0.2125]]


    plugins:
      - {name: obstacle_layer, type: "costmap_2d::VoxelLayer"}
      - {name: inflation_layer, type: "costmap_2d::InflationLayer"}

    obstacle_layer:
      observation_sources: laser_scan_sensor
      laser_scan_sensor:
        sensor_frame: base_footprint  
        data_type: LaserScan
        topic: /pepper_robot/naoqi_driver/laser  
        marking: true
        clearing: true
        min_obstacle_height: 0.1  
        max_obstacle_height: 2.5 

    inflation_layer:
      enabled: true
      inflation_radius: 0.25
      cost_scaling_factor: 1.5
      inflate_unknown: false
      max_obstacle_height: 3.0       
      min_obstacle_height: 0.1 

  DWAPlannerROS:

    max_vel_x: 0.8  # 0.55 #0.5
    min_vel_x: 0 

    max_vel_y: 0.4 #0.3 # diff drive robot if they are set to 0
    min_vel_y: -0.4  #-0.3

    max_trans_vel: 0.25  #0.25 # choose slightly less than the base's capability #0.5
    min_trans_vel: 0.05  # this is the min trans velocity when there is negligible rotational velocity
    trans_stopped_vel: 0.1

  # Warning!
  #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.

    max_rot_vel: 0.4  
    min_rot_vel: 0.15  
    rot_stopped_vel: 0.4
  
    acc_lim_x: 2.5 # maximum is theoretically 2.0, but we set it to 2.5 
    acc_lim_y: 2.5    
    acc_lim_theta: 3.2    

# Goal Tolerance Parameters
    yaw_goal_tolerance: 0.05 #0.05  #try 0.2
    xy_goal_tolerance: 0.10      #0.10   try 0.2
    latch_xy_goal_tolerance: false

# Forward Simulation Parameters
    sim_time: 1.5     #1.2  # 1.7 #2.5 #1.5
#sim_granularity: 0.025
#angular_sim_granularity: 0.025
    vx_samples: 20       # 20 
    vy_samples: 10      #10   #1  # diff drive robot, there is only one sample
    vtheta_samples: 20   #20 # 15

# Trajectory Scoring Parameters
    path_distance_bias: 64.0     # 32.0 64.0  - weighting for how much it should stick to the global path plan
    goal_distance_bias: 24.0    # 24.0   - wighting for how much it should attempt to reach its goal
    occdist_scale: 0.5          # try 0.02  # 0.01 #1.0  - weighting for how much the controller should avoid obstacles
    stop_time_buffer: 0.3         # 0.2    - amount of time a robot must stop in before colliding for a valid traj.
    scaling_speed: 0.25
    forward_point_distance: 0.325 # 0.325  - how far along to place an additional scoring pointed: 0.25           # 0.25   - absolute velocity at which to start scaling the robot's footprint
    max_scaling_factor: 0.4       # 0.2    - how much to scale the robot's footprint when at speed.

# Oscillation Prevention Parameters
    oscillation_reset_dist: 0.05  # 0.1   - how far to travel before resetting oscillation flags

    publish_traj_pc : true
    publish_cost_grid_pc: true
    global_frame_id: odom

# Differential-drive robot configuration 
    holonomic_robot: true #false
